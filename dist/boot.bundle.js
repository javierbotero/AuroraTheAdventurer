(()=>{"use strict";var r={766:(r,e,t)=>{t(575),t(913),t(205),t(585),t(754),t(591);t(260),Phaser.Scene},591:(r,e,t)=>{r.exports=t.p+"6d5d2af7ceb7896177bd.png"}},e={};function t(n){if(e[n])return e[n].exports;var o=e[n]={exports:{}};return r[n](o,o.exports,t),o.exports}t.m=r,t.n=r=>{var e=r&&r.__esModule?()=>r.default:()=>r;return t.d(e,{a:e}),e},t.d=(r,e)=>{for(var n in e)t.o(e,n)&&!t.o(r,n)&&Object.defineProperty(r,n,{enumerable:!0,get:e[n]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),t.o=(r,e)=>Object.prototype.hasOwnProperty.call(r,e),(()=>{var r;t.g.importScripts&&(r=t.g.location+"");var e=t.g.document;if(!r&&e&&(e.currentScript&&(r=e.currentScript.src),!r)){var n=e.getElementsByTagName("script");n.length&&(r=n[n.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=r})(),(()=>{var r={117:0},e=[[766,144]],n=()=>{};function o(){for(var n,o=0;o<e.length;o++){for(var a=e[o],i=!0,p=1;p<a.length;p++){var c=a[p];0!==r[c]&&(i=!1)}i&&(e.splice(o--,1),n=t(t.s=a[0]))}return 0===e.length&&(t.x(),t.x=()=>{}),n}t.x=()=>{t.x=()=>{},i=i.slice();for(var r=0;r<i.length;r++)a(i[r]);return(n=o)()};var a=o=>{for(var a,i,[c,s,u,l]=o,h=0,f=[];h<c.length;h++)i=c[h],t.o(r,i)&&r[i]&&f.push(r[i][0]),r[i]=0;for(a in s)t.o(s,a)&&(t.m[a]=s[a]);for(u&&u(t),p(o);f.length;)f.shift()();return l&&e.push.apply(e,l),n()},i=self.webpackChunktheaventurergame=self.webpackChunktheaventurergame||[],p=i.push.bind(i);i.push=a})(),t.x()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,